1
00:00:02,500 --> 00:00:08,900
Really come back in the previous step we looked at the limiter and also we look at the detachment in

2
00:00:08,920 --> 00:00:12,280
the step we would take a quick look at Dubery freshmen.

3
00:00:12,300 --> 00:00:14,910
Third was just present in the NTD manager.

4
00:00:14,940 --> 00:00:20,760
So in the previous example what we did is we created quoters flourished and we did clear.

5
00:00:20,820 --> 00:00:24,110
So what happens here is the managers are clear.

6
00:00:24,210 --> 00:00:27,570
So it clears all the things that managers.

7
00:00:27,600 --> 00:00:29,760
So it's not managing anything at this point.

8
00:00:29,760 --> 00:00:31,990
So what changes you make.

9
00:00:32,100 --> 00:00:34,960
They are not reflected in the database.

10
00:00:35,310 --> 00:00:40,690
Now let's set up for the next example for the refresh Let's remove the entity manager.

11
00:00:40,710 --> 00:00:42,870
Clear method call it in here.

12
00:00:43,200 --> 00:00:44,270
And we have a flush.

13
00:00:44,280 --> 00:00:46,570
So I don't really need a flush in here.

14
00:00:46,770 --> 00:00:53,870
So we basically have the insert here and the updates which are going on here.

15
00:00:54,120 --> 00:00:59,600
So one of the things I would want to do now after doing the update.

16
00:00:59,880 --> 00:01:01,880
Let's say these are done in different method.

17
00:01:01,890 --> 00:01:03,510
These are not really done here.

18
00:01:03,540 --> 00:01:09,360
So after doing the update say I would want to refresh course one with the details that are present in

19
00:01:09,360 --> 00:01:10,270
the database.

20
00:01:10,450 --> 00:01:16,610
So 12:45 I would want it to have the details that are as it is in the database.

21
00:01:16,610 --> 00:01:20,670
I don't want the updated date for one to go through.

22
00:01:20,670 --> 00:01:24,980
I would want to refresh code one with the contents from the database.

23
00:01:25,030 --> 00:01:32,560
How they do that the way I can do that using the manager is by using entity manager fresh.

24
00:01:32,580 --> 00:01:39,390
So what would happen is all the changes which I've done to quartersawn are lost and cost one will be

25
00:01:39,390 --> 00:01:42,980
refreshed with the content that comes from the database.

26
00:01:43,170 --> 00:01:46,260
So the steps are like this right so you create the code.

27
00:01:46,300 --> 00:01:48,380
This when I do a flush.

28
00:01:48,420 --> 00:01:52,700
These are inserted to the database so these two codes are being inserted to the database.

29
00:01:53,010 --> 00:01:55,060
I'm trying to make changes.

30
00:01:55,080 --> 00:01:59,930
These are still managed by the entity manager so into the manager keeps track of them.

31
00:02:00,090 --> 00:02:06,810
And here I am saying to the manager that refresh code 1 what happens to one content alone the candidate

32
00:02:06,810 --> 00:02:12,890
of course one alone would be refreshed and we would get the data from the database.

33
00:02:12,990 --> 00:02:14,010
Let's see what would happen.

34
00:02:14,070 --> 00:02:17,610
Let's put it the point in here I put a debug point in here.

35
00:02:17,850 --> 00:02:19,380
It will do so.

36
00:02:19,610 --> 00:02:22,680
And let's do it right click the bogus

37
00:02:26,550 --> 00:02:27,990
I put a debug point in here.

38
00:02:28,000 --> 00:02:34,030
I mean I would need to debug the application to add to it right like debuggers.

39
00:02:34,110 --> 00:02:41,680
Joe it asking me if I would want to launch and DBA perspective and say yes and I would want to go inside

40
00:02:41,680 --> 00:02:42,470
this method.

41
00:02:42,580 --> 00:02:50,890
So I'll say function at five or you can take a step in which is present or you.

42
00:02:51,080 --> 00:02:55,010
This is going in a little deeper than what I thought.

43
00:02:55,190 --> 00:03:01,840
And since we already have a breakpoint at the start of the Course repository I would say continue our

44
00:03:02,150 --> 00:03:05,830
step return to find.

45
00:03:06,120 --> 00:03:06,670
Now.

46
00:03:06,850 --> 00:03:08,520
The execution is at core.

47
00:03:08,520 --> 00:03:10,740
So now let's see what would happen.

48
00:03:10,750 --> 00:03:14,630
I would clear out the control two that I can follow what's happening in here.

49
00:03:14,860 --> 00:03:16,670
Make this a little bigger.

50
00:03:16,840 --> 00:03:19,950
And let's follow this closely enough.

51
00:03:19,960 --> 00:03:22,610
The shortcut first step or is it.

52
00:03:22,630 --> 00:03:26,130
So Alex the new code I think will happen with the database.

53
00:03:26,350 --> 00:03:27,960
Now I'm posting it.

54
00:03:28,120 --> 00:03:30,490
It's just calling for a sequence.

55
00:03:30,490 --> 00:03:36,290
So as soon as that persists the manager is calling for a sequence and setting devaluing to decode.

56
00:03:36,310 --> 00:03:40,610
So if you look at the code you can see that the idea of the cards is that what's the idea of the cards.

57
00:03:40,800 --> 00:03:45,000
One that's the only thing which is that because it's not still save the data.

58
00:03:45,030 --> 00:03:50,280
It is a sentence or two on function f six function F 6 now.

59
00:03:50,480 --> 00:03:54,530
So the could do as well so of to get the ID do too.

60
00:03:54,580 --> 00:03:58,640
I guess it should we do I guess this gets a value too.

61
00:03:58,900 --> 00:04:04,740
So now we are calling flush What does flush flush close to save this data down to the database.

62
00:04:04,750 --> 00:04:05,840
So what would happen.

63
00:04:07,110 --> 00:04:13,620
So what did the flush do the flush inserted because in so inserting to cause it saving the details down

64
00:04:13,620 --> 00:04:20,670
the database web services in hundred steps and inserting the code name ID values and lodges in hundred

65
00:04:20,760 --> 00:04:22,140
steps into that as well.

66
00:04:22,140 --> 00:04:26,960
So now duros are inserted down into the database.

67
00:04:26,970 --> 00:04:33,290
Now lets get the next statement before that I would do everything from the control function f six sir

68
00:04:33,460 --> 00:04:34,200
said name.

69
00:04:34,230 --> 00:04:36,000
Nothing happened.

70
00:04:36,000 --> 00:04:37,120
Nothing happens.

71
00:04:37,440 --> 00:04:39,920
And now what does the data in court.

72
00:04:40,080 --> 00:04:44,110
Of course when data is so is in hundred steps updated that the name.

73
00:04:44,520 --> 00:04:47,550
But now I'm trying to get a fresh course.

74
00:04:47,610 --> 00:04:49,220
What would happen.

75
00:04:49,280 --> 00:04:50,620
Observe carefully.

76
00:04:51,060 --> 00:04:59,940
Function FCX so you can see that the liquid is fired on quartersawn so you can see that the ascent is

77
00:04:59,940 --> 00:05:05,910
of one which is the idea of decors one and the data for course when it's refreshed and you see that

78
00:05:05,910 --> 00:05:07,050
it has a value.

79
00:05:07,260 --> 00:05:11,400
So in a hundred steps and now I'm going up flush.

80
00:05:11,580 --> 00:05:17,640
But even though I'm doing a flush now what would happen is the court one has decanting which is present

81
00:05:17,640 --> 00:05:18,690
in the database.

82
00:05:18,720 --> 00:05:23,310
So this does not need to be saved at all because this is exactly matching what the data is the thing

83
00:05:23,310 --> 00:05:31,780
which needs to be saved between just decors to a function f 6 or the sent out update cause said name

84
00:05:31,780 --> 00:05:38,710
musical to something where Id is equal to something which ID the ID which is sending is 2 and the Anglo

85
00:05:38,720 --> 00:05:46,470
just called the second code is updated descript the name for that is updated and saved down to the database.

86
00:05:46,470 --> 00:05:50,590
Now I can press function F-8 to complete the execution.

87
00:05:50,670 --> 00:05:56,810
If you go to the hash to control now and see the data you would see that this change is lost.

88
00:05:56,810 --> 00:05:59,440
So this change is not saved down to the database.

89
00:05:59,670 --> 00:06:03,960
So if you look at the code so on it would have the name as well.

90
00:06:03,990 --> 00:06:04,890
It is in hundred steps.

91
00:06:04,890 --> 00:06:09,450
However the cost to the name as and lurgy is in a hundred steps.

92
00:06:09,450 --> 00:06:15,760
So in this step what we did is we tried to understand did refresh method in detail.

93
00:06:15,840 --> 00:06:21,450
What we also did is look at what's happening in the background for each of these steps.

94
00:06:21,690 --> 00:06:26,630
I would recommend you to do a debug step with this to understand the whole thing much more.

95
00:06:26,640 --> 00:06:27,920
I'll see you in the next step.

