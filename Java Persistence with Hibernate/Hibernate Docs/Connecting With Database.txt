As an ORM tool, probably the single most important thing you need to tell Hibernate is how to connect to your database so that it may connect on behalf of your application. 
This is ultimately the function of the org.hibernate.engine.jdbc.connections.spi.ConnectionProvider interface.
Hibernate provides some out of the box implementations of this interface. ConnectionProvider is also an extension point so that you can use custom implementations from third parties or written yourself. 
The ConnectionProvider to use is defined by the hibernate.connection.provider_class
Hibernate will internally determine which ConnectionProvider to use based on an algorithm.

Hibernate can integrate with a javax.sql.DataSource for obtaining JDBC Connections.
Applications would tell Hibernate about the DataSource via the (required) hibernate.connection.datasource setting which can either specify a JNDI name or would reference the actual DataSource instance

In most cases, Hibernate will be able to determine the proper Dialect to use by asking some questions of the JDBC Connection during bootstrap
If for some reason it is not able to determine the proper one or you want to use a custom Dialect, you will need to set the hibernate.dialect setting.